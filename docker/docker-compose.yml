#--------------------- Docker Compose file for MERN app ---------------------#
#Docs: https://docs.docker.com/compose/compose-file 

version: "3.3"
services:

  #------ Client Container ------#
  client:
    container_name: my-react-nginx-client
    image: inbarprojects/my-react-nginx-client:latest
    pull_policy: always

    depends_on:
      - server
    networks:
      - mern-network

    ports:
      - 80:80
      - 443:443

    stdin_open: true #Keep STDIN open even if not attached, Same as docker run --interactive 
    tty: true #Allocate a pseudo-TTY, Same as docker run --tty   

  #------ Server Container ------#
  server:
    container_name: my-node-server
    image: inbarprojects/my-node-server:latest
    pull_policy: always

    depends_on:
      - db
    networks:
      - mern-network

    ports:
      - 80:5000

    #Vars in default server's env file, Accesible via Node's global varaiable - process.env.VAR_NAME
    env_file:
      - .env
    environment:
      - NODE_ENV=${env}
      - MONGO_URI=mongodb://my-mongo-db:27017 #For code use, The URI to access db's container from host
      - PORT=5000 #For code use

    stdin_open: true #Keep STDIN open even if not attached, Same as docker run --interactive 
    tty: true #Allocate a pseudo-TTY, Same as docker run --tty   

  #------ Databse Container ------#
  db:
    container_name: my-mongo-db
    image: mongo
    volumes:
      - mongodb-data:/data/db
    networks:
      - mern-network

#------ Services Configurations ------#
#Networks that are shared among multiple services
networks:
  mern-network:
    driver: bridge #Containers can communicate only by given ip or name
#Named volumes that are shared among multiple services 
volumes:
  mongodb-data:
    driver: local
